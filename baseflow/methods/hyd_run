import numpy as np

def hyd_run(streamflow, k=0.9, passes=4):
    """
    Separates baseflow from a streamflow hydrograph using a digital filter method.

    Args:
        streamflow (numpy.ndarray): A numpy array of streamflow values in chronological order.
        k (float, optional): A filter coefficient between 0 and 1 (typically 0.9). Defaults to 0.9.
        passes (int, optional): Number of times the filter passes through the data (typically 4). Defaults to 4.

    Returns:
        numpy.ndarray: A numpy array of baseflow values.

    Example:
        >>> import numpy as np
        >>> streamflow = np.array([10, 15, 20, 18, 12])
        >>> baseflow = hyd_run(streamflow)
        >>> print(baseflow)
        [10.         10.90909091 13.27272727 15.18181818 14.36363636]
    """
    # Convert to numpy array and handle NaN values
    Q = np.array(streamflow)
    Q = Q[~np.isnan(Q)]

    # Initialize baseflow list
    baseflow = np.zeros_like(Q)
    baseflow[0] = Q[0]  # Set first baseflow value to first streamflow value

    for p in range(1, passes + 1):
        # Forward and backward pass
        if p % 2 == 1:
            start, end, step = 0, len(Q), 1
        else:
            start, end, step = len(Q) - 1, -1, -1

        for i in range(start + step, end, step):
            tmp = k * baseflow[i - step] + (1 - k) * (Q[i] + Q[i - step]) / 2
            baseflow[i] = min(tmp, Q[i])

    return baseflow
